def solve_sudoku(board):
    def is_valid(num, row, col):
        for i in range(9):
            if board[row][i] == num or board[i][col] == num:
                return False
            if board[3 * (row // 3) + i // 3][3 * (col // 3) + i % 3] == num:
                return False
        return True

    def solve():
        for row in range(9):
            for col in range(9):
                if board[row][col] == '.':
                    for num in map(str, range(1, 10)):
                        if is_valid(num, row, col):
                            board[row][col] = num
                            if solve():
                                return True
                            board[row][col] = '.'
                    return False
        return True

    solve()

# Example usage
board = [["5","3",".",".","7",".",".",".","."], 
         ["6",".",".","1","9","5",".",".","."], 
         [".","9","8",".",".",".",".","6","."], 
         ["8",".",".",".","6",".",".",".","3"], 
         ["4",".",".","8",".","3",".",".","1"], 
         ["7",".",".",".","2",".",".",".","6"], 
         [".","6",".",".",".",".","2","8","."], 
         [".",".",".","4","1","9",".",".","5"], 
         [".",".",".",".","8",".",".","7","9"]]

solve_sudoku(board)
print(board)
