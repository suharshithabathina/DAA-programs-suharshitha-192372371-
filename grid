def findPaths(m, n, N, i, j):
    mod = 10**9 + 7
    dp = [[[0] * n for _ in range(m)] for _ in range(N + 1)]
    dp[0][i][j] = 1

    for steps in range(1, N + 1):
        for x in range(m):
            for y in range(n):
                for dx, dy in [(1, 0), (-1, 0), (0, 1), (0, -1)]:
                    nx, ny = x + dx, y + dy
                    if 0 <= nx < m and 0 <= ny < n:
                        dp[steps][x][y] = (dp[steps][x][y] + dp[steps - 1][nx][ny]) % mod
                    else:
                        dp[steps][x][y] = (dp[steps][x][y] + 1) % mod

    return dp[N][0][0]

# Example usage
print(findPaths(2, 2, 2, 0, 0))  # Output: 6
print(findPaths(1, 3, 3, 0, 1))  # Output: 12
