def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        swapped = False
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
                swapped = True
        if not swapped:
            break
    return arr

# Test Cases for Bubble Sort
print(bubble_sort([64, 25, 12, 22, 11]))  # Expected Output: [11, 12, 22, 25, 64]
print(bubble_sort([29, 10, 14, 37, 13]))  # Expected Output: [10, 13, 14, 29, 37]
print(bubble_sort([3, 5, 2, 1, 4]))       # Expected Output: [1, 2, 3, 4, 5]
print(bubble_sort([1, 2, 3, 4, 5]))       # Expected Output: [1, 2, 3, 4, 5]
print(bubble_sort([5, 4, 3, 2, 1]))       # Expected Output: [1, 2, 3, 4, 5]

def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and key < arr[j]:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr

# Test Cases for Insertion Sort
print(insertion_sort([3, 1, 4, 1, 5, 9, 2, 6, 5, 3]))  # Expected Output: [1, 1, 2, 3, 3, 4, 5, 5, 6, 9]
print(insertion_sort([5, 5, 5, 5, 5]))                    # Expected Output: [5, 5, 5, 5, 5]
print(insertion_sort([2, 3, 1, 3, 2, 1, 1, 3]))          # Expected Output: [1, 1, 1, 2, 2, 3, 3, 3]
