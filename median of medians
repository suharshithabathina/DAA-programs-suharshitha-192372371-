def median_of_medians(arr, k):
    if len(arr) < 10:
        return sorted(arr)[k]

    sublists = [arr[i:i + 5] for i in range(0, len(arr), 5)]
    medians = [sorted(sublist)[len(sublist) // 2] for sublist in sublists]
    pivot = median_of_medians(medians, len(medians) // 2)

    low = [x for x in arr if x < pivot]
    high = [x for x in arr if x > pivot]
    k_index = len(low)

    if k < k_index:
        return median_of_medians(low, k)
    elif k > k_index:
        return median_of_medians(high, k - k_index - 1)
    else:
        return pivot

# Test cases
arr1 = [12, 3, 5, 7, 19]
k1 = 2
print(median_of_medians(arr1, k1))  # Expected Output: 5

arr2 = [12, 3, 5, 7, 4, 19, 26]
k2 = 3
print(median_of_medians(arr2, k2))  # Expected Output: 5

arr3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
k3 = 6
print(median_of_medians(arr3, k3))  # Expected Output: 6
